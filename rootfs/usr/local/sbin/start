#!/usr/bin/env bash

: "${MIXPOST_VERSION:='^1.0'}"
: "${LICENSE_KEY:=''}"
: "${LICENSE_EMAIL:='username'}"
: "${APP_KEY:=''}"

# Set default PUID and PGID values if not set
: ${PUID:=1000}
: ${PGID:=1000}

# Set the default APP_PORT to listen on to 80 if not set
: ${APP_PORT:=80}

manageAppFiles() {
  # Copy app's files to root folder
  cp -r standalone-app/* .

  # Delete downloaded standalone app
  rm -rf standalone-app

  # Remove generated migration files
  rm -rf database/migrations

  # Copy static migration files
  cp -r /var/www/app/migrations database/migrations

  # Copy commands
  cp -r /var/www/app/commands/* app/Console/Commands
}

backupStandaloneApp() {
  tar czf /var/backup-standalone-app.tar.gz standalone-app/
  cp /var/backup-standalone-app.tar.gz /var/www/html/storage/app/
}

restoreStandaloneAppBackup() {
  tar xzf storage/app/backup-standalone-app.tar.gz -C .
}

start() {
  # Laravel stuff
  php artisan storage:link
  php artisan config:cache
  php artisan route:cache

  # Wait for MySQL
  wait-for-it ${DB_HOST:-mysql}:${DB_PORT:-3306} -t 60

  # Wait for Redis
  wait-for-it ${REDIS_HOST:-redis}:${REDIS_PORT:-6379} -t 60
  
  # Update migration timestamps (In the case of a legacy project)
  php artisan mixpost:update-migration-timestamps

  # Migrate database tables
  php artisan migrate --force

  # Clear Mixpost cache
  php artisan mixpost:clear-settings-cache
  php artisan mixpost:clear-services-cache

  # Permissions
  chown -R www-data:www-data /var/www/html

  # Start cron
  rc-status -a
  touch /run/openrc/softlevel
  rc-service dcron start

  # Start supervisor
  /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf &

  echo "
      __  ___ _                            __ 
    /  |/  /(_)_  __ ____   ____   _____ / /_
    / /|_/ // /| |/_// __ \ / __ \ / ___// __/
  / /  / // /_>  < / /_/ // /_/ /(__  )/ /_  
  /_/  /_//_//_/|_|/ .___/ \____//____/ \__/  
                  /_/                         
  ";

  echo "------- Mixpost has started! -------"
}

if [ "${MIXPOST_VERSION:0:1}" = "^" ]; then
  echo "MIXPOST_VERSION ${MIXPOST_VERSION}- OK"
else
  echo "ERROR! MIXPOST_VERSION does not start with ^"
  exit 1
fi

# Compatibility. Beginning of major stable releases. Package Version = App Version
case "$MIXPOST_VERSION" in
  ^0.2)
    APP_VERSION="^0.1"
    ;;
  ^0.3)
    APP_VERSION="^0.2"
    ;;
  ^0.4)
    APP_VERSION="^0.2"
    ;;
  ^0.5)
    APP_VERSION="^0.2"
    ;;
  ^0.6)
    APP_VERSION="^0.2"
    ;;
  ^0.7)
    APP_VERSION="^0.2"
    ;;
  ^0.8)
    APP_VERSION="^0.2"
    ;;
  ^0.9)
    APP_VERSION="^0.2"
    ;;
  ^0.10)
    APP_VERSION="^0.2"
    ;;
  ^1.0)
    APP_VERSION="^1.0"
    ;;
  *)
    echo "ERROR! Unknown MIXPOST_VERSION: $MIXPOST_VERSION"
    exit 1
    ;;
esac

# Check if www-data user exists
if id "www-data" &>/dev/null; then
    echo -e "\033[32mUser www-data exists\033[0m"
else
    echo -e "\033[31mUser www-data does not exist, creating...\033[0m"
    adduser -D -h /var/www/html -s /bin/zsh -u $PUID -G www-data www-data
fi

# Check if www-data's uid is the value we want
current_uid=$(id -u www-data 2>/dev/null)
if [ "$current_uid" != "$PUID" ]; then
    echo -e "\033[33mChanging www-data uid to $PUID\033[0m"
    usermod -u $PUID www-data
fi

# Check if www-data group exists
if getent group "www-data" &>/dev/null; then
    echo -e "\033[32mGroup www-data exists\033[0m"
else
    echo -e "\033[31mGroup www-data does not exist, creating...\033[0m"
    addgroup -g $PGID www-data
fi

# Check if www-data's gid is the value we want
current_gid=$(getent group www-data | awk -F: '{print $3}')
if [ "$current_gid" != "$PGID" ]; then
    echo -e "\033[33mChanging www-data gid to $PGID\033[0m"
    groupmod -g $PGID www-data
fi

# Create needed directories
mkdir -p ~/.composer /var/log/supervisor /var/www/html/storage/logs /run/php

# Create auth.json file for composer
echo "{
  \"http-basic\": {
    \"packages.inovector.com\": {
      \"username\": \"${LICENSE_EMAIL}\",
      \"password\": \"${LICENSE_KEY}\"
    }
  }
}" > ~/.composer/auth.json

# Create standalone app
composer create-project inovector/mixpost-pro-team-app:$APP_VERSION standalone-app || exit 1

# In case the license is expired or has been deleted, composer will stop,
# and we will have to use the latest version of Mixpost installed from the backup if it exists.
DIR="/var/www/html/standalone-app/vendor/inovector/mixpost-pro-team"

if [[ -d "$DIR" && -r "$DIR" ]]; then
  if find "$DIR" -maxdepth 0 -empty | read v; then
    restoreStandaloneAppBackup
    manageAppFiles
  else
    backupStandaloneApp
    manageAppFiles
  fi
else
  restoreStandaloneAppBackup
  manageAppFiles
fi

# Set the Apache port
# Update the Apache listen entry to use the APP_PORT value
sed -i "s/Listen [0-9]*/Listen $APP_PORT/g" /usr/local/apache2/conf/httpd.conf
echo -e "\033[33mUpdated 'Listen' entry in Apache conf to port $APP_PORT\033[0m"

# Also update the Apache virtual host entry to use the APP_PORT value
sed -i "s/<VirtualHost \*:[0-9]*>/<VirtualHost *:$APP_PORT>/g" /usr/local/apache2/conf/extra/httpd-vhosts.conf
echo -e "\033[33mUpdated 'VirtualHost' entry in Apache conf to use port $APP_PORT\033[0m"

start

tail -f /dev/null