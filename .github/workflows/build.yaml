name: Build and Push Docker Image 💾

# Define concurrency key to ensure only the latest run 
# for a given type of job will execute
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronised, reopened, closed]
  push:
    branches-ignore:
      - 'main'
  release:
    types: [published]

jobs:
  pr_open:
    name: PR Opened 📥
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📋
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx 🛠️
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry 🗝️
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker 🏷️
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr,prefix=PR-

      - name: Get current date 📆
        id: date
        run: echo ::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")

      - name: Cache Docker layers 🗄️
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Build and push Docker Image 🏭
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }} 
          labels: ${{ steps.docker_meta.outputs.labels }} 
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-old,mode=max
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}
            VCS_URL=${{ github.server_url }}/${{ github.repository }}

  pr_merged_main:
    name: PR Merged in Main 🚀
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📋
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx 🛠️
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry 🗝️
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker 🏷️
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=raw,value=edge

      - name: Get current date 📆
        id: date
        run: echo ::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")

      - name: Cache Docker layers 🗄️
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker Image 🏭
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }} 
          labels: ${{ steps.docker_meta.outputs.labels }} 
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-old,mode=max
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}
            VCS_URL=${{ github.server_url }}/${{ github.repository }}

  pr_merged_other_branches:
    name: PR Merged to Non-Main Branch 🤝
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref != 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📋
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx 🛠️
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry 🗝️
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker 🏷️
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch

      - name: Get current date 📆
        id: date
        run: echo ::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")

      - name: Cache Docker layers 🗄️
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker Image 🏭
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }} 
          labels: ${{ steps.docker_meta.outputs.labels }} 
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-old,mode=max
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}
            VCS_URL=${{ github.server_url }}/${{ github.repository }}

  new_release:
    name: New Release 🎉
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📋
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx 🛠️
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry 🗝️
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker 🏷️
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Get current date 📆
        id: date
        run: echo ::set-output name=date::$(date -u +"%Y-%m-%dT%H:%M:%SZ")

      - name: Cache Docker layers 🗄️
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker Image 🏭
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }} 
          labels: ${{ steps.docker_meta.outputs.labels }} 
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-old,mode=max
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.ref_name }}
            VCS_URL=${{ github.server_url }}/${{ github.repository }}